
/* -*- c++ -*- */
{ 
    defaultCamera = "camera"; 
    entities = { 
        camera = Camera { 
            depthOfFieldSettings = DepthOfFieldSettings { 
                enabled = false; 
                farBlurRadiusFraction = 0.005; 
                farBlurryPlaneZ = -100; 
                farSharpPlaneZ = -40; 
                focusPlaneZ = -10; 
                lensRadius = 0.01; 
                model = "NONE"; 
                nearBlurRadiusFraction = 0.015; 
                nearBlurryPlaneZ = -0.25; 
                nearSharpPlaneZ = -1; 
                reducedResolutionFactor = 1; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = true; 
                antialiasingFilterRadius = 0; 
                antialiasingHighQuality = true; 
                bloomRadiusFraction = 0.009; 
                bloomStrength = 0.2; 
                debugZoom = 1; 
                effectsEnabled = true; 
                gamma = 2.2; 
                sensitivity = 1; 
                temporalAntialiasingEnabled = false; 
                toneCurve = Spline { 
                    control = ( 0, 0.0787234, 0.306383, 0.75532, 0.92 ); 
                    extrapolationMode = "LINEAR"; 
                    finalInterval = -1; 
                    interpolationMode = "CUBIC"; 
                    time = ( 0, 0.169565, 0.339131, 0.752174, 1 ); 
                }; 
                
                vignetteBottomStrength = 0; 
                vignetteSizeFraction = 0; 
                vignetteTopStrength = 0; 
            }; 
            
            frame = CFrame::fromXYZYPRDegrees(7.262, 5.6372, -0.98573, 90.511, -43.296, 0 ); 
            motionBlurSettings = MotionBlurSettings { 
                enabled = false; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 27; 
            }; 
            
            overridePixelOffset = true; 
            projection = Projection { 
                farPlaneZ = -inf; 
                fovDegrees = 25; 
                fovDirection = "VERTICAL"; 
                nearPlaneZ = -0.15; 
                pixelOffset = Vector2(0, 0 ); 
            }; 
            
            visualizationScale = 1; 
        }; 
        
        ground = VisibleEntity { 
            canChange = false; 
            castsShadows = false; 
            frame = CFrame::fromXYZYPRDegrees(0.296232, -1, -1.02927 ); 
            model = "groundModel"; 
        }; 
        
        light = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(180 ); 
            canChange = false; 
            castsShadows = false; 
            extent = Vector2(4, 3 ); 
            farPlaneZLimit = -10; 
            frame = CFrame::fromXYZYPRDegrees(-1.61284, 2.83561, -0.938982, -89.1637, -58.5157, -1.44258 ); 
            nearPlaneZLimit = -1; 
            rectangular = true; 
            shadowMapSize = Vector2int16(4096, 4096 ); 
            shadowsEnabled = true; 
            spotHalfAngleDegrees = 87; 
            type = "AREA"; 
            varianceShadowSettings = VSMSettings { 
                baseSize = Vector2int16(4096, 4096 ); 
                blurMultiplier = 10; 
                downsampleFactor = 2; 
                enabled = false; 
                filterRadius = 11; 
            }; 
            
        }; 
        
        orbitCamera = Camera { 
            depthOfFieldSettings = DepthOfFieldSettings { 
                enabled = false; 
                farBlurRadiusFraction = 0.005; 
                farBlurryPlaneZ = -100; 
                farSharpPlaneZ = -40; 
                focusPlaneZ = -10; 
                lensRadius = 0.01; 
                model = "NONE"; 
                nearBlurRadiusFraction = 0.015; 
                nearBlurryPlaneZ = -0.25; 
                nearSharpPlaneZ = -1; 
                reducedResolutionFactor = 1; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = true; 
                antialiasingFilterRadius = 0.0; 
                antialiasingHighQuality = true; 
                bloomRadiusFraction = 0.009; 
                bloomStrength = 0.2; 
                debugZoom = 1; 
                effectsEnabled = true; 
                gamma = 2.2; 
                sensitivity = 2; 
                temporalAntialiasingEnabled = true; 
                toneCurve = Spline { 
                    control = ( 0, 0.0787234, 0.306383, 0.75532, 0.92 ); 
                    extrapolationMode = "LINEAR"; 
                    finalInterval = -1; 
                    interpolationMode = "CUBIC"; 
                    time = ( 0, 0.169565, 0.339131, 0.752174, 1 ); 
                }; 
                
                vignetteBottomStrength = 0.2; 
                vignetteSizeFraction = 0.3; 
                vignetteTopStrength = 0.2; 
            }; 
            
            motionBlurSettings = MotionBlurSettings { 
                enabled = false; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 27; 
            }; 
            
            overridePixelOffset = true; 
            projection = Projection { 
                farPlaneZ = -inf; 
                fovDegrees = 16; 
                fovDirection = "VERTICAL"; 
                nearPlaneZ = -0.15; 
                pixelOffset = Vector2(-0.171875, -0.228395 ); 
            }; 
            
            track = lookAt(
                transform(
                    Point3(0, 4, 0 ), 
                    orbit(9, 60 ) ), 
                transform(
                    Point3(0, 0.5, 0 ), 
                    entity("teapot") ) ); 
            
            visualizationScale = 1; 
        }; 
        
        skybox = Skybox { 
            texture = Color3(0 ); 
        }; 
        
        teapot = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(0.472816, -0.993266, -1.06669, -66.1655 ); 
            model = "teapotModel"; 
        }; 
        
    }; 
    
    lightingEnvironment = LightingEnvironment { 
        ambientOcclusionSettings = AmbientOcclusionSettings { 
            bias = 0.0235417; 
            blurRadius = 5; 
            blurStepSize = 1; 
            depthPeelSeparationHint = 0.01; 
            edgeSharpness = 0.8125; 
            enabled = true; 
            highQualityBlur = true; 
            intensity = 1.25; 
            monotonicallyDecreasingBilateralWeights = false; 
            numSamples = 99; 
            packBlurKeys = false; 
            radius = 0.368768; 
            temporalFilterSettings = TemporalFilter::Settings { 
                falloffEndDistance = 0.07; 
                falloffStartDistance = 0.05; 
                hysteresis = 0; 
            }; 
            
            temporallyVarySamples = true; 
            useDepthPeelBuffer = true; 
            useNormalBuffer = true; 
            useNormalsInBlur = true; 
            zStorage = "HALF"; 
        }; 
        
        environmentMap = Texture::Specification { 
            
            encoding = Color3(0.07 );             
           // filename = "cubemap/uffizi/uffizi*.jpg"; 
        }; 
        
    }; 
    
    models = { 
        groundModel = ArticulatedModel::Specification { 
            filename = "ifs/squarex8.ifs"; 
            preprocess = { 
                scaleAndOffsetTexCoord0(all(), 0.25, Vector2(0, 0 ) ); 
                setCFrame(root(), CFrame::fromXYZYPRDegrees(0, 0, 0, 0, -90, 0 ) ); 
                setTwoSided("mesh", true ); 
                setMaterial(all(), UniversalMaterial::Specification { 
                        //bump = "material/diamondplate/diamondplate-bump.png", 
                        //glossy = Color4( Color3(0.5 ), 0.8 ), 
                        glossy = Color4( Color3(1 ), 1 ), 
                        
                        //lambertian = Color3(0.1 ), 
                        lambertian = Color3(1 ), 

                    } ) }; 
            
            scale = 5; 
        }; 
        
        teapotModel = ArticulatedModel::Specification { 
            filename = "model/teapot/teapot.obj"; 
            preprocess = { 
                scaleAndOffsetTexCoord0(all(), 4, Vector2(0, 0 ) ); 
                setMaterial(all(), UniversalMaterial::Specification { 
                        glossy = Color4(
                            Color3(0.1 ), 
                            0.9 ), 
                        
                        lambertian = "model/teapot/islamic.png", 
                    } ) }; 
            
            scale = 0.016; 
            stripMaterials = true; 
        }; 
        
    }; 
    
    name = "Teapot on Metal"; 
} 