#version 430
#include <compatibility.glsl>
#include <g3dmath.glsl>
#include <Texture/Texture.glsl>

//uniform sampler2D FRONT;
//
//out Color3 result;
//
//void main() {
//	int2 P = int2(gl_FragCoord.xy);
//	result = texelFetch(FRONT, P, 0).rgb;
//}

//uniform samplerCube Cubemap;
//
//out Color3 result;
//
//void main()
//{
//	int2 P = int2(gl_FragCoord.xy);
//	vec3 sampleDir = vec3(1,1,1);
//	result = texture(Cubemap, sampleDir).rgb;
//}

uniform sampler2DArray RadianceProbeGrid;
uniform sampler2DArray IrradianceProbeGrid;
uniform sampler2DArray DistanceProbeGrid;
uniform sampler2DArray MeanDistProbeGrid;

out Color3 result;

void main()
{
	result = texture(RadianceProbeGrid, vec3(gl_FragCoord.xy / 1024, 0)).rgb;
	result = texture(IrradianceProbeGrid, vec3(gl_FragCoord.xy / 1024, 0)).rgb;
	result = vec3(texture(DistanceProbeGrid, vec3(gl_FragCoord.xy / 1024, 0)).r/100, 0, 0);
	result = vec3(texture(MeanDistProbeGrid, vec3(gl_FragCoord.xy / 1024, 0)).rg, 0);
}